swagger: "2.0"
info:
  version: "0.0.1"
  title: Kabi
# during dev, should point to your local machine
host: 1fb3ab39.ngrok.io
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /api/addroles:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addRole
      tags: ['User Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/addRoles"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"      
            
  /api/getroles:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      consumes:
        - application/octet-stream  
        - application/json
      description: Add new item by admin
      # function to be called
      operationId: getRoles
      tags: ['User Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/getAllItems"      
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
            
  /api/addItemImages/{itemId}/{isThumb}:
    # our controller name
    x-swagger-router-controller: item_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addImageToItem
      consumes:
        - multipart/form-data      
      tags: ['Items Module']
      parameters:
        - name: files
          in: formData
          type: file
          required: false
        - name: itemId
          in: path
          description: Item Id
          required: true
          type: string
        - name: isThumb
          in: path
          description: Item Id
          required: true
          type: boolean          
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /api/deleteItemImages/{itemId}/{imageId}:
    # our controller name
    x-swagger-router-controller: item_ctrl
    delete:
      description: delete image of item
      # function to be called
      operationId: deleteItemImage     
      tags: ['Items Module']
      parameters:
        - name: itemId
          in: path
          description: Item Id
          required: true
          type: string
        - name: imageId
          in: path
          description: Image Id
          required: true
          type: string          
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"             

  /api/addsizes:
    # our controller name
    x-swagger-router-controller: size_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addSizes
      tags: ['Size Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/addSizes"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /api/getsizes:
    # our controller name
    x-swagger-router-controller: size_ctrl
    post:
      consumes:
        - application/octet-stream    
      description: Add new item by admin
      # function to be called
      operationId: getSizes
      tags: ['Size Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/getAllItems"      
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /api/getTest:
    # our controller name
    x-swagger-router-controller: common_ctrl
    get:
      description: Add new item by admin
      # function to be called
      operationId: testGet
      tags: ['Test Module']
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"             

  /api/addcategorytype:
    # our controller name
    x-swagger-router-controller: category_type_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addCategoryType
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newCategoryType"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
            
  /api/getCategoryTypes:
    # our controller name
    x-swagger-router-controller: category_type_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: getCategoryTypes
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/getCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            

  /api/addCategory:
    # our controller name
    x-swagger-router-controller: category_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/getCategory:
    # our controller name
    x-swagger-router-controller: category_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: getCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/getCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
                        
  /api/deleteCategory/{_id}:
    # our controller name
    x-swagger-router-controller: category_ctrl
    delete:
      description: Add new item by admin
      # function to be called
      operationId: deleteCategory
      tags: ['Category Module']
      parameters:
        - name: _id
          in: path
          description: Category Id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            

  /api/addSubCategory:
    # our controller name
    x-swagger-router-controller: subCategory_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: sub category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newSubCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/getSubCategory/:
    # our controller name
    x-swagger-router-controller: subCategory_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: getSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/getCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 

  /api/deleteSubCategory/{_id}:
    # our controller name
    x-swagger-router-controller: subCategory_ctrl
    delete:
      description: Add new item by admin
      # function to be called
      operationId: deleteSubCategory
      tags: ['Category Module']
      parameters:
        - name: _id
          in: path
          description: Category Id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"             

  /api/addsubSubCategory:
    # our controller name
    x-swagger-router-controller: subSubCategory_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addSubSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: sub category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newSubSubCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/getSubSubCategory:
    # our controller name
    x-swagger-router-controller: subSubCategory_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: getSubSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/getCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
                                                            
  /api/deleteSubSubCategory:
    # our controller name
    x-swagger-router-controller: subSubCategory_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: deleteSubSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/deleteCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /api/register:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      description: add new user
      # movie info to be stored
      operationId: registerUser
      tags: ['User Module']
      parameters:
        - name: body
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/registerUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/login:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      description: add new user
      # movie info to be stored
      operationId: loginUser
      tags: ['User Module']
      parameters:
        - name: body
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/loginUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /api/adminlogin:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      description: login admin
      # function to be called
      operationId: loginAdmin
      tags: ['User Module']
      parameters:
        - name: body
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/loginUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/additem:
    # our controller name
    x-swagger-router-controller: item_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addItem
      tags: ['Items Module']
      parameters:
        - name: body
          description: item properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newItem"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/getAllItems:
    # our controller name
    x-swagger-router-controller: item_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: getAllItems
      tags: ['Items Module']
      parameters:
        - name: body
          description: item properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/getAllItems"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
            
  /api/deleteitem/{item_id}:
    # our controller name
    x-swagger-router-controller: item_ctrl
    delete:
      description: Add new item by admin
      # function to be called
      operationId: deleteItem
      tags: ['Items Module']
      parameters:
        - name: item_id
          in: path
          description: Item Id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"             
            
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  addRoles:
    type: object
    properties:
      role_name:
        type: string
        description: Role name
      role_category:
        type: string
        description: Category name        
    required:
      - role_name
      - role_category

  addSizes:
    type: object
    properties:
      size_name:
        type: string
        description: Size name
      size_group:
        type: string
        description: Group name        
    required:
      - size_name
      - size_group

  getAllItems:
    type: object
    properties:
      page:
        type: number
        description: page number
      limit:
        type: number
        description: limit per page  

  newSubSubCategory:
    type: object
    properties:
      subSubCategory_name:
        type: string
        description: Category name
      sub_category_id:
        type: string
        description: Category name        
    required:
      - subSubCategory_name
      - sub_category_id

  newSubCategory:
    type: object
    properties:
      subCategory_name:
        type: string
        description: Category name
      category_id:
        type: string
        description: Category name        
    required:
      - subCategory_name
      - category_id

  deleteCategory:
    type: object
    properties:
      _id:
        type: string
        description: id       

  getCategory:
    type: object
    properties:
      page:
        type: number
        description: page number
      limit:
        type: number
        description: page number        

  newCategory:
    type: object
    properties:
      category_name:
        type: string
        description: Category name
      category_type:
        type: string
        description: id of category type
      sub_categories:
        type: array
        items: 
          type: object
          properties:
            subCategory_name:
              type: string
              description: Category name 
            
    required:
      - category_name
      - category_type
      
  newCategoryType:
    type: object
    properties:
      category_type_name:
        type: string
        description: Category name       
    required:
      - category_type_name      

  newItem:
    type: object
    properties:
      item_name:
        type: string
        description: Item name
      item_price:
        type: string
        description: Item price
      item_description:
        type: string
        description: Item description 
      category_id:
        type: string
        description: Category Id 
      category_type_id:
        type: string
        description: Category Id  
      sub_category_id:
        type: string
        description: Category Id 
      sub_sub_category_id:
        type: string
        description: Category Id 
      quantity:
        type: array
        description: Category Id
        items:
          $ref: '#/definitions/sizeArray'         
    required:
      - item_name
      - item_price
      - item_description
      - category_id
      - category_type_id
      - quantity
      
  sizeArray:
    type: object
    properties:
      size_id:
        type: string
      quantity:
        type: string
    required:
      - size_id
      - quantity
      
  registerUser:
    type: object
    properties:
      full_name:
        type: string
        description: task object name
      email:
        type: string
        description: task description
      password:
        type: string
        description: task description 
      mobile_primary:
        type: string
        description: task description 
      user_name:
        type: string
        description: task description 
      role_id:
        type: string
        description: task description         
    required:
      - full_name
      - email
      - password
      - mobile_primary
      - user_name
      - role_id
      
  loginUser:
    type: object
    properties:
      email:
        type: string
        description: task description
      password:
        type: string
        description: task description        
    required:
      - email
      - password      

  GeneralResponse:
    type: object
    properties:
      code:
        type: number
        description: returns 200 if successful
      message:
        type: string
        description: a short comment
    required:
      - code
      - message
 
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
