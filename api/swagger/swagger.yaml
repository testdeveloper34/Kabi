swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:5001
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /api/getSubSubCategory:
    # our controller name
    x-swagger-router-controller: subSubCategory_ctrl
    get:
      description: Add new item by admin
      # function to be called
      operationId: getSubSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/getCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /api/addsubSubCategory:
    # our controller name
    x-swagger-router-controller: subSubCategory_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addSubSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: sub category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newSubSubCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/getSubCategory:
    # our controller name
    x-swagger-router-controller: subCategory_ctrl
    get:
      description: Add new item by admin
      # function to be called
      operationId: getSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/getCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            

  /api/addSubCategory:
    # our controller name
    x-swagger-router-controller: subCategory_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addSubCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: sub category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newSubCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/getCategory:
    # our controller name
    x-swagger-router-controller: category_ctrl
    get:
      description: Add new item by admin
      # function to be called
      operationId: getCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/getCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/addCategory:
    # our controller name
    x-swagger-router-controller: category_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addCategory
      tags: ['Category Module']
      parameters:
        - name: body
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/register:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      description: add new user
      # movie info to be stored
      operationId: registerUser
      tags: ['User Module']
      parameters:
        - name: body
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/registerUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/login:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      description: add new user
      # movie info to be stored
      operationId: loginUser
      tags: ['User Module']
      parameters:
        - name: body
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/loginUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /api/adminlogin:
    # our controller name
    x-swagger-router-controller: user_ctrl
    post:
      description: login admin
      # function to be called
      operationId: loginAdmin
      tags: ['User Module']
      parameters:
        - name: body
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/loginUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /api/addItem:
    # our controller name
    x-swagger-router-controller: item_ctrl
    post:
      description: Add new item by admin
      # function to be called
      operationId: addItem
      tags: ['Items Module']
      parameters:
        - name: body
          description: item properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/newItem"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
            
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:

  newSubSubCategory:
    type: object
    properties:
      subSubCategory_name:
        type: string
        description: Category name
      sub_category_id:
        type: string
        description: Category name        
    required:
      - subSubCategory_name
      - sub_category_id

  newSubCategory:
    type: object
    properties:
      subCategory_name:
        type: string
        description: Category name
      category_id:
        type: string
        description: Category name        
    required:
      - subCategory_name
      - category_id

  getCategory:
    type: object
    properties:
      page:
        type: number
        description: page number
      limit:
        type: number
        description: page number        

  newCategory:
    type: object
    properties:
      category_name:
        type: string
        description: Category name       
    required:
      - category_name

  newItem:
    type: object
    properties:
      item_name:
        type: string
        description: Item name
      item_price:
        type: number
        description: Item price
      item_description:
        type: string
        description: Item description 
      category_id:
        type: string
        description: Category Id        
    required:
      - item_name
      - item_price
      - item_description
      - category_id

  registerUser:
    type: object
    properties:
      full_name:
        type: string
        description: task object name
      email:
        type: string
        description: task description
      password:
        type: string
        description: task description 
      mobile_primary:
        type: string
        description: task description 
      user_name:
        type: string
        description: task description 
      role_id:
        type: string
        description: task description         
    required:
      - full_name
      - email
      - password
      - mobile_primary
      - user_name
      - role_id
      
  loginUser:
    type: object
    properties:
      email:
        type: string
        description: task description
      password:
        type: string
        description: task description        
    required:
      - email
      - password      

  GeneralResponse:
    type: object
    properties:
      code:
        type: number
        description: returns 200 if successful
      message:
        type: string
        description: a short comment
    required:
      - code
      - message
 
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
